# Generated by Django 3.2.12 on 2022-12-16 15:57

import base.constant
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('answer', models.TextField()),
                ('correct', models.BooleanField(default=False)),
                ('math', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'quiz"."answer',
            },
        ),
        migrations.CreateModel(
            name='AnswerSign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('order', models.IntegerField(db_index=True, default=0)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('name_code', models.CharField(max_length=255, null=True, unique=True)),
            ],
            options={
                'db_table': 'quiz"."answer_sign',
            },
        ),
        migrations.CreateModel(
            name='CommonQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name_code', models.CharField(max_length=255, null=True, unique=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='')),
            ],
            options={
                'db_table': 'quiz"."common_question',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('order', models.IntegerField(db_index=True, default=0)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('name_kz', models.CharField(max_length=255)),
                ('name_ru', models.CharField(max_length=255)),
                ('name_en', models.CharField(max_length=255)),
                ('name_code', models.CharField(max_length=255, null=True, unique=True)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='lesson')),
            ],
            options={
                'db_table': 'quiz"."lesson',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='LessonGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('main', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'quiz"."lesson_group',
            },
        ),
        migrations.CreateModel(
            name='LessonQuestionLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('order', models.IntegerField(db_index=True, default=0)),
                ('number_of_questions', models.IntegerField(db_index=True, default=0)),
            ],
            options={
                'db_table': 'quiz"."lesson_question_level',
            },
        ),
        migrations.CreateModel(
            name='NumberOfQuestions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('numbers', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Нумерация вопросов',
                'verbose_name_plural': 'Нумерация вопросов',
                'db_table': 'quiz"."number_of_questions',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('order', models.IntegerField(db_index=True, default=0)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('question', models.TextField(db_index=True)),
                ('math', models.BooleanField(default=False)),
                ('common_question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='quizzes.commonquestion')),
                ('lesson_question_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quizzes.lessonquestionlevel')),
            ],
            options={
                'db_table': 'quiz"."question',
            },
        ),
        migrations.CreateModel(
            name='QuestionLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('order', models.IntegerField(db_index=True, default=0)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('name_kz', models.CharField(max_length=255)),
                ('name_ru', models.CharField(max_length=255)),
                ('name_en', models.CharField(max_length=255)),
                ('name_code', models.CharField(max_length=255, null=True, unique=True)),
                ('point', models.PositiveSmallIntegerField(db_index=True, default=0)),
                ('choice', models.PositiveSmallIntegerField(choices=[(0, 'CHOICE')], db_index=True, default=base.constant.ChoiceType['CHOICE'])),
            ],
            options={
                'db_table': 'quiz"."question_level',
            },
        ),
        migrations.CreateModel(
            name='QuizEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('quizzes_type', models.CharField(choices=[('BY_LESSON', 'BY_LESSON')], db_index=True, max_length=128, null=True)),
                ('status', models.CharField(choices=[('NOT_PASSED', 'NOT_PASSED')], default=base.constant.Status['NOT_PASSED'], max_length=128)),
            ],
            options={
                'db_table': 'quiz"."quiz_event',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('order', models.IntegerField(db_index=True, default=0)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('name_kz', models.CharField(max_length=255)),
                ('name_ru', models.CharField(max_length=255)),
                ('name_en', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'quiz"."tag',
            },
        ),
        migrations.CreateModel(
            name='TestType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('order', models.IntegerField(db_index=True, default=0)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('name_kz', models.CharField(max_length=255)),
                ('name_ru', models.CharField(max_length=255)),
                ('name_en', models.CharField(max_length=255)),
                ('name_code', models.CharField(max_length=255, null=True, unique=True)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='test_type')),
            ],
            options={
                'db_table': 'quiz"."test_type',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('order', models.IntegerField(db_index=True, default=0)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('variant', models.IntegerField()),
                ('sum_question', models.IntegerField(default=0)),
                ('main', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'quiz"."variant',
            },
        ),
        migrations.CreateModel(
            name='VariantQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('order', models.IntegerField(db_index=True, default=0)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quizzes.question')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quizzes.variant')),
            ],
            options={
                'db_table': 'quiz"."variant_question',
            },
        ),
        migrations.CreateModel(
            name='VariantGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('order', models.IntegerField(db_index=True, default=0)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('name_kz', models.CharField(max_length=255)),
                ('name_ru', models.CharField(max_length=255)),
                ('name_en', models.CharField(max_length=255)),
                ('icon', models.ImageField(null=True, upload_to='')),
                ('duration', models.DurationField(null=True)),
                ('test_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='variant_groups', to='quizzes.testtype')),
            ],
            options={
                'db_table': 'quiz"."variant_group',
            },
        ),
        migrations.AddField(
            model_name='variant',
            name='variant_group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='quizzes.variantgroup'),
        ),
        migrations.CreateModel(
            name='UserVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('NOT_PASSED', 'NOT_PASSED')], db_index=True, default=base.constant.Status['NOT_PASSED'], max_length=128)),
                ('lesson_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_variants', to='quizzes.lessongroup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_variant', to=settings.AUTH_USER_MODEL)),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_variant', to='quizzes.variant')),
            ],
            options={
                'db_table': 'quiz"."user_variant',
            },
        ),
        migrations.CreateModel(
            name='TestTypeLessonGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('lesson_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_type_lesson_groups', to='quizzes.lessongroup')),
                ('test_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_type_lesson_groups', to='quizzes.testtype')),
            ],
            options={
                'db_table': 'quiz"."test_type_lesson_group',
            },
        ),
        migrations.CreateModel(
            name='TestTypeLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('language', models.CharField(choices=[('kz', 'KAZAKH'), ('ru', 'RUSSIAN')], db_index=True, default=base.constant.TestLang['KAZAKH'], max_length=64)),
                ('main', models.BooleanField(default=False)),
                ('questions_number', models.IntegerField(default=1)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_type_lessons', to='quizzes.lesson')),
                ('test_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_type_lessons', to='quizzes.testtype')),
            ],
            options={
                'unique_together': {('test_type', 'lesson')},
            },
        ),
        migrations.CreateModel(
            name='TagQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('order', models.IntegerField(db_index=True, default=0)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('name_kz', models.CharField(max_length=255)),
                ('name_ru', models.CharField(max_length=255)),
                ('name_en', models.CharField(max_length=255)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tag_questions', to='quizzes.question')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tag_questions', to='quizzes.tag')),
            ],
            options={
                'db_table': 'quiz"."tag_question',
            },
        ),
        migrations.AddField(
            model_name='tag',
            name='test_type_lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quizzes.testtypelesson'),
        ),
        migrations.CreateModel(
            name='QuizEventQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_event_questions', to='quizzes.question')),
                ('quiz_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_event_questions', to='quizzes.quizevent')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='quiz_event_questions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'quiz"."quiz_event_question',
            },
        ),
        migrations.AddField(
            model_name='quizevent',
            name='test_type_lesson',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='quiz_event', to='quizzes.testtypelesson'),
        ),
        migrations.AddField(
            model_name='question',
            name='variant_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quizzes.variantgroup'),
        ),
        migrations.CreateModel(
            name='PassAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pass_answers', to='quizzes.answer')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pass_answers', to='quizzes.question')),
                ('quiz_event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pass_answers', to='quizzes.quizevent')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pass_answers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'quiz"."pass_answer',
            },
        ),
        migrations.AddField(
            model_name='lessonquestionlevel',
            name='question_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quizzes.questionlevel'),
        ),
        migrations.AddField(
            model_name='lessonquestionlevel',
            name='test_type_lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quizzes.testtypelesson'),
        ),
        migrations.CreateModel(
            name='LessonPair',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_pairs', to='quizzes.testtypelesson')),
                ('lesson_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_pairs', to='quizzes.lessongroup')),
            ],
            options={
                'db_table': 'quiz"."lesson_pair',
            },
        ),
        migrations.CreateModel(
            name='FlashCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('passed', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quizzes.question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flash_cards', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Флэш карта',
                'verbose_name_plural': 'Флэш карты',
                'db_table': 'quiz"."flash_card',
            },
        ),
        migrations.AddField(
            model_name='answer',
            name='answer_sign',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='quizzes.answersign'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='quizzes.question'),
        ),
        migrations.AlterUniqueTogether(
            name='lessonquestionlevel',
            unique_together={('test_type_lesson', 'question_level')},
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('is_favorite', models.BooleanField(default=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='quizzes.question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'quiz"."favorite',
                'ordering': ['-modified'],
                'unique_together': {('question', 'user')},
            },
        ),
    ]
