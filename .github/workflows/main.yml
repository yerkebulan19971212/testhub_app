name: Main-Deploy
env:
  path: /var/www/grafen/
  venv_file: venv
  env_file: .env
  celerybeat: celerybeat-schedule
  branch: main
  
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]



jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install ssh-key 
      run: |
        mkdir "$HOME/.ssh"
        echo "${{ secrets.PROD_SSH_KEY }}" > "$HOME/.ssh/key"
        chmod 600 "$HOME/.ssh/key"
        ssh-keyscan -H "${{ secrets.PROD_IP }}" >>"$HOME/.ssh/known_hosts"
    - name: Deploy
      run: |
        rsync -e "ssh -i $HOME/.ssh/key -o StrictHostKeyChecking=no" \
        --exclude "${{ env.venv_file }}" \
        --exclude "${{ env.celerybeat }}" \
        --exclude "${{ env.env_file }}" \
        --archive  \
        --compress \
        --delete . \
        "${{ secrets.PROD_USER }}@${{ secrets.PROD_IP }}:${{ env.path }}"
    - name: Connect to remote server
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.PROD_IP }}
        username: ${{ secrets.PROD_USER }}
        password: ${{ secrets.PROD_PASS }}
        port: ${{ secrets.PROD_SSH_PORT }}
        script: |
                cd "${{ env.path }}"
                echo директория "$PWD"
                chmod +x scripts/dev/*.sh
                for f in scripts/"${{ env.branch }}"/*.sh; do
                  bash "$f" || break
                done
        


